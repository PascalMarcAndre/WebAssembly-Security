{
    "owner": {
        "reputation": 16432,
        "user_id": 9119186,
        "user_type": "registered",
        "profile_image": "https://i.stack.imgur.com/RFjFW.png?s=128&g=1",
        "display_name": "Vencovsky",
        "link": "https://stackoverflow.com/users/9119186/vencovsky"
    },
    "is_accepted": true,
    "score": 1,
    "last_activity_date": 1584117534,
    "creation_date": 1584117534,
    "answer_id": 60674202,
    "question_id": 60674120,
    "content_license": "CC BY-SA 4.0",
    "body": "<p>You need to use <a href=\"https://docs.microsoft.com/en-us/aspnet/core/blazor/components?view=aspnetcore-3.1#cascading-values-and-parameters\" rel=\"nofollow noreferrer\">Cascading values and parameters</a></p>\n\n<p>You would need to have a <code>CascadingValue</code> component that is parent of any component that will react to the changes.</p>\n\n<p><code>CascadingValue</code> will receive a property called <code>Value</code> that will hold the value you want to the children to see (<code>State</code>).</p>\n\n<p>And you will get that property in your child components and pass an attribute <code>CascadingParameter</code> to a property with the same name you passed in <code>CascadingValue</code>'s <code>Value</code> attribute.</p>\n\n<p>e.g. from the docs</p>\n\n<p>The parent</p>\n\n<pre><code>@inherits LayoutComponentBase\n@using BlazorSample.UIThemeClasses\n\n@inject IState State @* Injecting the State *@\n\n&lt;div class=\"container-fluid\"&gt;\n    &lt;div class=\"row\"&gt;\n        &lt;div class=\"col-sm-3\"&gt;\n            &lt;NavMenu /&gt;\n        &lt;/div&gt;\n        &lt;div class=\"col-sm-9\"&gt;\n            &lt;CascadingValue Value=\"State\"&gt; @* Passing State as a Cascading Value*@\n                &lt;div class=\"content px-4\"&gt;\n                    @Body\n                &lt;/div&gt;\n            &lt;/CascadingValue&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Any child component</p>\n\n<pre><code>&lt;input type=\"checkbox\" @bind=\"State.ShowEasterEggs\"/&gt;Show Easter Eggs\n\n@code {\n\n    // Getting the Cascading Value as a parameter\n    [CascadingParameter]\n    protected State State { get; set; }\n\n}\n</code></pre>\n"
}