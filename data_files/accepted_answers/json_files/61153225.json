{
    "owner": {
        "reputation": 1866,
        "user_id": 1419658,
        "user_type": "registered",
        "accept_rate": 83,
        "profile_image": "https://lh6.googleusercontent.com/-PBM6G3QRJUo/AAAAAAAAAAI/AAAAAAAAOw0/hGPjTuuiM74/photo.jpg?sz=128",
        "display_name": "Caleb",
        "link": "https://stackoverflow.com/users/1419658/caleb"
    },
    "is_accepted": true,
    "score": 3,
    "last_activity_date": 1586629938,
    "last_edit_date": 1586629938,
    "creation_date": 1586588868,
    "answer_id": 61153225,
    "question_id": 61153224,
    "content_license": "CC BY-SA 4.0",
    "body": "<p><strong>1. Create Roles and Policies in App.Shared</strong></p>\n\n<p>Add the <a href=\"https://www.nuget.org/packages/Microsoft.AspNetCore.Authorization/\" rel=\"nofollow noreferrer\">Microsoft.AspNetCore.Authorization</a> package to the <code>App.Shared</code> project</p>\n\n<p>Add the following 2 classes in the <code>App.Shared</code> project to define Roles and Policies that will be used by the Client and Server.</p>\n\n<p><em>Shared/RoleTypes.cs</em></p>\n\n<pre><code>namespace App.Shared\n{\n    public static class RoleTypes\n    {\n        public const string Admin = \"Admin\";\n    }\n}\n</code></pre>\n\n<p><em>Shared/PolicyTypes.cs</em></p>\n\n<pre><code>using Microsoft.AspNetCore.Authorization;\n\nnamespace App.Shared\n{\n    public static class PolicyTypes\n    {\n        public const string RequireAdmin = \"RequireAdmin\";\n\n        public static AuthorizationOptions AddAppPolicies(this AuthorizationOptions options)\n        {\n            options.AddPolicy(RequireAdmin, policy =&gt;\n                policy.RequireRole(RoleTypes.Admin));\n            return options;\n        }\n    }\n}\n</code></pre>\n\n<p><strong>2. Configure services in App.Server</strong></p>\n\n<p>Modify the <code>Startup.cs</code> file in the <code>App.Server</code> project to add your policies by calling the extension method that was just defined in <code>App.Shared</code>.</p>\n\n<p>Also modify it to include the <code>role</code> claim in the <code>openid</code> scope.</p>\n\n<p><em>Server/Startup.cs</em></p>\n\n<pre><code>using App.Shared;\n...\n\nnamespace App.Server\n{\n    public class Startup\n    {\n\n        ...\n\n        public void ConfigureServices(IServiceCollection services)\n        {\n            ...\n\n            services.AddDefaultIdentity&lt;AppUser&gt;(options =&gt;\n                {\n                    options.SignIn.RequireConfirmedAccount = true;\n                })\n                .AddRoles&lt;IdentityRole&gt;()\n                .AddEntityFrameworkStores&lt;AppDb&gt;();\n\n            services.AddIdentityServer()\n                .AddApiAuthorization&lt;AppUser, AppDb&gt;(options =&gt;\n                {\n                    // https://github.com/dotnet/AspNetCore.Docs/issues/17649\n                    options.IdentityResources[\"openid\"].UserClaims.Add(\"role\");\n                    options.ApiResources.Single().UserClaims.Add(\"role\");\n                });\n            // Need to do this as it maps \"role\" to ClaimTypes.Role and causes issues\n            JwtSecurityTokenHandler.DefaultInboundClaimTypeMap.Remove(\"role\");\n\n            services.AddAuthentication()\n                .AddIdentityServerJwt();\n\n            services.AddAuthorization(options =&gt; options.AddAppPolicies());\n\n            ...\n        }\n\n        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)\n        {\n            ...\n\n            app.UseAuthentication();\n            app.UseAuthorization();\n            app.UseIdentityServer();\n\n            ...\n        }\n    }\n}\n</code></pre>\n\n<p><strong>3. Configure services in App.Client</strong></p>\n\n<p>Modify the <code>Program.cs</code> file in the <code>App.Client</code> project to add your policies by calling the extension method that was just defined in <code>App.Shared</code>.  Also modify <code>AddApiAuthorization</code> to configure the <code>role</code> claim.</p>\n\n<p><em>Client/Program.cs</em></p>\n\n<pre><code>using App.Client.Services;\nusing App.Shared;\n...\n\nnamespace App.Client\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            ...\n\n            builder.Services.AddAuthorizationCore(options =&gt; options.AddAppPolicies());\n            // 2 calls to AddApiAuthorization are necessary in 3.2-preview3\n            // should be fixed in 3.2-preview4\n            // https://github.com/dotnet/aspnetcore/issues/19854\n            // https://github.com/dotnet/AspNetCore.Docs/issues/17649#issuecomment-612442543\n            builder.Services.AddApiAuthorization();\n            builder.Services.AddApiAuthorization(options =&gt;\n            {\n                options.UserOptions.RoleClaim = \"role\";\n            });\n\n            ...\n        }\n    }\n}\n</code></pre>\n"
}