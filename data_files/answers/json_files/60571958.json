[
    {
        "owner": {
            "reputation": 31,
            "user_id": 9065809,
            "user_type": "registered",
            "profile_image": "https://www.gravatar.com/avatar/ccc462fb96ab6db599516ad622babaf9?s=128&d=identicon&r=PG&f=1",
            "display_name": "ahmetsevgili",
            "link": "https://stackoverflow.com/users/9065809/ahmetsevgili"
        },
        "is_accepted": false,
        "score": 1,
        "last_activity_date": 1601154143,
        "creation_date": 1601154143,
        "answer_id": 64082488,
        "question_id": 60571958,
        "content_license": "CC BY-SA 4.0",
        "body": "<p>add</p>\n<pre><code>builder.Services.AddApiAuthorization();\n</code></pre>\n<p>and install</p>\n<blockquote>\n<p>Microsoft.AspNetCore.Components.WebAssembly.Authentication</p>\n</blockquote>\n<p>my main method:</p>\n<pre><code>    public static async Task Main(string[] args)\n    {\n        var builder = WebAssemblyHostBuilder.CreateDefault(args);\n        builder.RootComponents.Add&lt;App&gt;(&quot;app&quot;);\n        builder.Services.AddOptions();\n        builder.Services.AddAuthorizationCore();\n        builder.Services.AddScoped&lt;CustomStateProvider&gt;();\n        builder.Services.AddScoped&lt;AuthenticationStateProvider&gt;(s =&gt; s.GetRequiredService&lt;CustomStateProvider&gt;());\n        builder.Services.AddTransient(sp =&gt; new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n        builder.Services.AddApiAuthorization();\n\n        await builder.Build().RunAsync();\n    }\n</code></pre>\n"
    },
    {
        "owner": {
            "reputation": 11,
            "user_id": 3032201,
            "user_type": "registered",
            "profile_image": "https://www.gravatar.com/avatar/cfe71e1c6b2872dfd7a92a23ca598354?s=128&d=identicon&r=PG&f=1",
            "display_name": "standby",
            "link": "https://stackoverflow.com/users/3032201/standby"
        },
        "is_accepted": false,
        "score": 0,
        "last_activity_date": 1593148262,
        "creation_date": 1593148262,
        "answer_id": 62588378,
        "question_id": 60571958,
        "content_license": "CC BY-SA 4.0",
        "body": "<p>Disabling the Linker seems to be the only working solution right now.</p>\n<p>I added the following code:</p>\n<pre><code>builder.Services.AddOptions();\nbuilder.Services.AddAuthorizationCore();\n</code></pre>\n<p>and added a custom AuthenticationStateProvider without any success.</p>\n<p>Issue on github seems to be closed by this workaround: <a href=\"https://github.com/dotnet/aspnetcore/issues/22298\" rel=\"nofollow noreferrer\">https://github.com/dotnet/aspnetcore/issues/22298</a></p>\n"
    },
    {
        "owner": {
            "reputation": 45,
            "user_id": 13253887,
            "user_type": "registered",
            "profile_image": "https://i.stack.imgur.com/ptSpj.jpg?s=128&g=1",
            "display_name": "dingdonglars",
            "link": "https://stackoverflow.com/users/13253887/dingdonglars"
        },
        "is_accepted": false,
        "score": 1,
        "last_activity_date": 1586314697,
        "last_edit_date": 1586314697,
        "creation_date": 1586299973,
        "answer_id": 61090679,
        "question_id": 60571958,
        "content_license": "CC BY-SA 4.0",
        "body": "<p>I had this problem. It went away when I installed <code>Microsoft.AspNetCore.Components.Authorization</code> from NuGet. The <code>@using Microsoft.AspNetCore.Components.Authorization</code> directive does not give any visual clues in Visual Studio that the package is missing</p>\n"
    },
    {
        "owner": {
            "reputation": 25737,
            "user_id": 6152891,
            "user_type": "registered",
            "accept_rate": 75,
            "profile_image": "https://www.gravatar.com/avatar/b45b7f89429f8766cdbf6c776c0a9d41?s=128&d=identicon&r=PG",
            "display_name": "enet",
            "link": "https://stackoverflow.com/users/6152891/enet"
        },
        "is_accepted": true,
        "score": 3,
        "last_activity_date": 1595925033,
        "last_edit_date": 1595925033,
        "creation_date": 1583539533,
        "answer_id": 60573139,
        "question_id": 60571958,
        "content_license": "CC BY-SA 4.0",
        "body": "<p>Add <code>@using Microsoft.AspNetCore.Components.Authorization</code> at the top of the App.razor file.</p>\n<p>Add services for options and authorization to Program.Main (Client-side):</p>\n<pre><code>builder.Services.AddOptions();\nbuilder.Services.AddAuthorizationCore();\n</code></pre>\n<p>Note: The following (Client-side):</p>\n<pre><code> services.AddBlazoredLocalStorage();\n services.AddAuthorizationCore();\n services.AddScoped&lt;AuthenticationStateProvider, \n                          ApiAuthenticationStateProvider&gt;();\n        services.AddScoped&lt;IAuthService, AuthService&gt;();\n</code></pre>\n<p>Belongs in the client, not in the server, though at the end of the day its the same configuration...</p>\n<p>Note: The following (Client-side):</p>\n<pre><code>services.AddScoped&lt;AuthenticationStateProvider, \n                          ApiAuthenticationStateProvider&gt;();\n</code></pre>\n<p>Should be (Client-side):</p>\n<pre><code>services.AddScoped&lt;ApiAuthenticationStateProvider&gt;();\nservices.AddScoped&lt;AuthenticationStateProvider&gt;(provider =&gt; provider.GetRequiredService&lt;ApiAuthenticationStateProvider&gt;());\n</code></pre>\n<p>You should pay attention to order in the Startup class</p>\n<p><strong>Update:</strong></p>\n<p>Disabling the linker, as I've suggested in a comment below seems to be working. However, this should be a temporary solution. This is how you disable the linker: <code>&lt;BlazorLinkOnBuild&gt;false&lt;/BlazorLinkOnBuild&gt;</code></p>\n<p>By disabling the linker, you prevent the removal of unused or un-referenced code, which may be the cause of the error... And by enabling the linker, you allow this. However, this code:</p>\n<pre><code>builder.Services.AddOptions();\nbuilder.Services.AddAuthorizationCore();\n</code></pre>\n<p>should have prevented the linker from stripping off un-referenced logic.\nStill better, adding a custom AuthenticationStateProvider implementation in the Program class:</p>\n<pre><code> builder.Services.AddScoped&lt;AuthenticationStateProvider, \n                          ApiAuthenticationStateProvider&gt;(); \n</code></pre>\n<p>should have fixed this issue. Did you do that like that ?</p>\n<p>Once again, disabling the linker is a temporary solution.</p>\n"
    }
]