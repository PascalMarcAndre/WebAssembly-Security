[
    {
        "owner": {
            "reputation": 25737,
            "user_id": 6152891,
            "user_type": "registered",
            "accept_rate": 75,
            "profile_image": "https://www.gravatar.com/avatar/b45b7f89429f8766cdbf6c776c0a9d41?s=128&d=identicon&r=PG",
            "display_name": "enet",
            "link": "https://stackoverflow.com/users/6152891/enet"
        },
        "is_accepted": true,
        "score": 2,
        "last_activity_date": 1588988170,
        "last_edit_date": 1588988170,
        "creation_date": 1588962954,
        "answer_id": 61685804,
        "question_id": 61683382,
        "content_license": "CC BY-SA 4.0",
        "body": "<h2>MessageService.cs</h2>\n\n<pre><code> public class MessageService\n{\n    private string message;\n    public string Message\n    {\n        get =&gt; message;\n        set\n        {\n            if (message != value)\n            {\n                message = value;\n                if (Notify != null)\n                {\n                     Notify?.Invoke();\n                }\n\n            }\n        }\n    }\n\n    public event Action Notify;\n}\n</code></pre>\n\n<p>Note: The service is a normal class... It provides services to other objects, and it should be added to the DI container in Startup.ConfigureServices method to make it available to requesting clients. Add this: to the ConfigureServices method:</p>\n\n<pre><code> services.AddScoped&lt;MessageService&gt;();\n</code></pre>\n\n<p>Note: As you can see I define an event delegate of the Action type, which is invoked from the property's set accessor, when the user type text into a text box in Component3. Triggering this delegate causes the text entered by Components3 to be displayed in the Index component which is the parent of Component2 (see code below).</p>\n\n<h2>Index.razor</h2>\n\n<pre><code>  @page \"/\"\n\n  @inject MessageService MessageService\n  @implements IDisposable\n  @inject IJSRuntime  JSRuntime\n\n  &lt;p&gt;\n   I'm the parent of Component2. I've got a message from my grand \n   child: @MessageService.Message\n  &lt;/p&gt;\n\n  &lt;Component2 /&gt;\n  &lt;p&gt;@jwtToken&lt;/p&gt;\n\n  @code {\n    private string jwtToken;\n\n    protected override async Task OnInitializedAsync()\n   {\n       // await SetTokenAsync(\"my token\");\n       jwtToken = await GetTokenAsync();\n       MessageService.Notify += OnNotify;\n       MessageService.Message = \"A message from Index\";\n    }\n\n    public void OnNotify()\n    {\n    InvokeAsync(() =&gt;\n    {\n        StateHasChanged();\n    });\n}\n\npublic void Dispose()\n{\n    MessageService.Notify -= OnNotify;\n}\n\npublic async Task&lt;string&gt; GetTokenAsync()\n       =&gt; await JSRuntime.InvokeAsync&lt;string&gt;(\"localStorage.getItem\", \"authToken\");\n\npublic async Task SetTokenAsync(string token)\n{\n    if (token == null)\n    {\n        await JSRuntime.InvokeAsync&lt;object&gt;(\"localStorage.removeItem\", \"authToken\");\n    }\n    else\n    {\n        await JSRuntime.InvokeAsync&lt;object&gt;(\"localStorage.setItem\", \"authToken\", token);\n    }\n\n\n }\n}\n</code></pre>\n\n<p>Note that we directly bind to the MessageService.Message property, but the StateHasChanged method must be called to refresh the display of the text.</p>\n\n<h2>Component2.razor</h2>\n\n<pre><code>&lt;h3&gt;Component2: I'm the parent of component three&lt;/h3&gt;\n&lt;Component3/&gt;\n\n@code {\n\n}\n</code></pre>\n\n<h2>Component3.razor</h2>\n\n<pre><code> @inject MessageService MessageService\n\n &lt;p&gt;This is component3. Please type a message to my grand parent&lt;/p&gt;\n &lt;input placeholder=\"Type a message to grandpa...\" type=\"text\"\n   @bind=\"@MessageService.Message\" @bind:event=\"oninput\" /&gt;\n\n @code {\n\n     protected override void OnInitialized()\n     {\n\n        MessageService.Notify += () =&gt; InvokeAsync(() =&gt;\n        {\n           StateHasChanged();\n        });\n\n     }\n }\n</code></pre>\n\n<p>Note that in Component3 we bind the MessageService.Message to a text box, and the binding occurs each time you press a key board( input event versus change \n event).</p>\n\n<p>That is all, hope this helps, and don't hesitate to ask any question.</p>\n"
    }
]