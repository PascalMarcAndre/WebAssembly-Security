{
    "tags": [
        "c#",
        "jwt",
        "blazor",
        "blazor-webassembly"
    ],
    "owner": {
        "reputation": 403,
        "user_id": 2209634,
        "user_type": "registered",
        "accept_rate": 80,
        "profile_image": "https://www.gravatar.com/avatar/afe4a5f554d071c8ce24b96131678fde?s=128&d=identicon&r=PG&f=1",
        "display_name": "user2209634",
        "link": "https://stackoverflow.com/users/2209634/user2209634"
    },
    "is_answered": true,
    "view_count": 32,
    "accepted_answer_id": 66538352,
    "answer_count": 1,
    "score": 0,
    "last_activity_date": 1615243707,
    "creation_date": 1615154384,
    "question_id": 66521906,
    "content_license": "CC BY-SA 4.0",
    "link": "https://stackoverflow.com/questions/66521906/error-when-attempting-to-decode-json-web-token-returned-from-own-backend-api",
    "title": "Error when attempting to decode JSON Web Token returned from own backend API -",
    "body": "<p>I have a Blazor WebAssembly application with an ASP.Net Core Web API backend.</p>\n<p>The app uses JSON Web Tokens, which are created and returned by the backend API as part of a successful authentication by the user.</p>\n<p>I have a problem once the JWT has been returned to the browser, and Blazor is attempting to decode the contents of the token.</p>\n<p>In my development environment, this works beautifully, and decodes all the encoded information within the token.</p>\n<p>However, when attempting to run both the API and Blazor Webassembly front end on the web server, the following exception is generated when attempting to decode the token:</p>\n<pre><code>EXCEPTION: IDX12729: Unable to decode the header 'System.String' as Base64Url encoded string. jwtEncodedString: 'System.String'\n</code></pre>\n<p>The exception is generated by the following code:</p>\n<pre><code>var jwtHandler = new JwtSecurityTokenHandler();\n\nvar jwtToken = jwtHandler.ReadJwtToken(jwtTokenString);\n</code></pre>\n<blockquote>\n<p>System.IdentityModel.Tokens.Jwt, Version=6.8.0.0</p>\n</blockquote>\n<p>The actual token is below:</p>\n<pre><code>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiam9obmRvZSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWVpZGVudGlmaWVyIjoiZTUwZjZhYmUtYjcyYi00MWI2LWIwYTctMGE3Y2M0OGYwZWYzIiwiZ2l2ZW5fbmFtZSI6IkpvaG4iLCJmYW1pbHlfbmFtZSI6IkRvZSIsImVtYWlsIjoiam9obkBkb2UuY29tIiwiYXV0aF90aW1lIjoiMDcvMDMvMjAyMSAyMTo0MTozMCIsImV4cCI6MTYxNTE4OTI5MCwiQ29tcGFueUlkIjoiMSIsIkNvbXBhbnlOYW1lIjoiSkQgQ28gUExDIiwiT3JnYW5pc2F0aW9uSWQiOiIxIiwiT3JnYW5pc2F0aW9uTmFtZSI6IkpEIE9yZyBQTEMiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOlsiQ29tcGFueUFkbWluIiwiR2VuZXJhbFVzZXIiLCJHbG9iYWxBZG1pbiIsIk9yZ2FuaXNhdGlvbkFkbWluIiwiT3JnYW5pc2F0aW9uQmlsbGluZyJdLCJpc3MiOiJKb2huRG9lQXBpIiwiYXVkIjoiaHR0cHM6Ly9qb2huZG9lLmNvbSJ9.klbdvnjikSbnjr8q_7d4vxMsxajPJ3nY3yiDevJCdHo\n</code></pre>\n<p>I have validated the token (via <a href=\"https://devtoolzone.com/decoder/jwt\" rel=\"nofollow noreferrer\">https://devtoolzone.com/decoder/jwt</a> ) and everything looks ok.</p>\n<p><a href=\"https://i.stack.imgur.com/5LxW2.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/5LxW2.png\" alt=\"Contents of Token\" /></a></p>\n<p>Can anyone offer any guidance?</p>\n"
}