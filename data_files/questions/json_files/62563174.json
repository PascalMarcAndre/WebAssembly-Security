{
    "tags": [
        "asp.net",
        "iis",
        "identityserver4",
        "blazor",
        "webassembly"
    ],
    "owner": {
        "reputation": 21,
        "user_id": 13808181,
        "user_type": "registered",
        "profile_image": "https://lh3.googleusercontent.com/-D8VFLyS_M4E/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucka2m74IkgqtA25mXEGSnYYTKljIQ/photo.jpg?sz=128",
        "display_name": "lkriz",
        "link": "https://stackoverflow.com/users/13808181/lkriz"
    },
    "is_answered": true,
    "view_count": 493,
    "answer_count": 1,
    "score": 1,
    "last_activity_date": 1593094239,
    "creation_date": 1593028948,
    "question_id": 62563174,
    "content_license": "CC BY-SA 4.0",
    "link": "https://stackoverflow.com/questions/62563174/identityserver4-authorization-error-not-matching-redirect-uri",
    "title": "IdentityServer4 authorization error not matching redirect URI",
    "body": "<p>I have a Blazor WebAssembly application that is hosted in ASP.NET CORE server. I am using IIS in process self-contained deployment and the application is configured as a sub-application of the Default Web Site. So the URL is something like [https:]//myserver/APPLICATIONNAME/</p>\n<p>I am getting an error  saying that the redirect URI does not match the allowed URIs for the client, but in the log the two URIs are exactly the same. The redirect URI is defined in appsettings.json file.</p>\n<p>I have followed the Microsoft docs <a href=\"https://docs.microsoft.com/en-us/aspnet/core/blazor/security/webassembly/hosted-with-identity-server?view=aspnetcore-3.1&amp;tabs=visual-studio\" rel=\"nofollow noreferrer\">here</a></p>\n<p>This is the log error without explicit redirect URI:</p>\n<pre><code>{\n  &quot;ClientId&quot;: &quot;TestBlazorAuth.Client&quot;,\n  &quot;ClientName&quot;: &quot;TestBlazorAuth.Client&quot;,\n  &quot;AllowedRedirectUris&quot;: [\n    &quot;/authentication/login-callback&quot;\n  ],\n  &quot;SubjectId&quot;: &quot;anonymous&quot;,\n  &quot;RequestedScopes&quot;: &quot;&quot;,\n  &quot;Raw&quot;: {\n    &quot;client_id&quot;: &quot;TestBlazorAuth.Client&quot;,\n    &quot;redirect_uri&quot;: &quot;https://localhost/TestBlazorAuth/authentication/login-callback&quot;,\n    &quot;response_type&quot;: &quot;code&quot;,\n    &quot;scope&quot;: &quot;TestBlazorAuth.ServerAPI openid profile&quot;,\n    &quot;state&quot;: &quot;d53f88ebd6dc413fb929f01b06cd8efa&quot;,\n    &quot;code_challenge&quot;: &quot;XPaEMOg02714PWrx9POC3oSwsO2mXAhBe_IerH4p75E&quot;,\n    &quot;code_challenge_method&quot;: &quot;S256&quot;,\n    &quot;prompt&quot;: &quot;none&quot;,\n    &quot;response_mode&quot;: &quot;query&quot;\n  }\n}\n</code></pre>\n<p>This is the explicit setting:</p>\n<pre><code>&quot;IdentityServer&quot;: {\n    &quot;Clients&quot;: {\n      &quot;TestBlazorAuth.Client&quot;: {\n        &quot;Profile&quot;: &quot;IdentityServerSPA&quot;,\n        &quot;RedirectUri&quot;: &quot;https://localhost/TestBlazorAuth/authentication/login-callback&quot;\n      }\n    },\n    &quot;Key&quot;: {\n      &quot;Type&quot;: &quot;File&quot;,\n      &quot;FilePath&quot;: &quot;C:\\\\temp\\\\som_cert_file.pfx&quot;,\n      &quot;Password&quot;: &quot;blablabla&quot;\n    }\n  },\n</code></pre>\n<p>This is the error log when explicit setting is used:</p>\n<pre><code>Invalid redirect_uri: https://localhost/TestBlazorAuth/authentication/login-callback\n{\n  &quot;ClientId&quot;: &quot;TestBlazorAuth.Client&quot;,\n  &quot;ClientName&quot;: &quot;TestBlazorAuth.Client&quot;,\n  &quot;AllowedRedirectUris&quot;: [\n    &quot;https://localhost/TestBlazorAuth/authentication/login-callback&quot;\n  ],\n  &quot;SubjectId&quot;: &quot;anonymous&quot;,\n  &quot;RequestedScopes&quot;: &quot;&quot;,\n  &quot;Raw&quot;: {\n    &quot;client_id&quot;: &quot;TestBlazorAuth.Client&quot;,\n    &quot;redirect_uri&quot;: &quot;https://localhost/TestBlazorAuth/authentication/login-callback&quot;,\n    &quot;response_type&quot;: &quot;code&quot;,\n    &quot;scope&quot;: &quot;TestBlazorAuth.ServerAPI openid profile&quot;,\n    &quot;state&quot;: &quot;3b121b72d20640cb8c7b74f783b5d914&quot;,\n    &quot;code_challenge&quot;: &quot;WNev6kwUV7UjAhNTvvDH10vJwkEXPDev8jwNZYnsNDY&quot;,\n    &quot;code_challenge_method&quot;: &quot;S256&quot;,\n    &quot;prompt&quot;: &quot;none&quot;,\n    &quot;response_mode&quot;: &quot;query&quot;\n  }\n}\n</code></pre>\n<p>redirect_uri and AllowedRedirectUris[0] look exactly the same to me.</p>\n<p>This is a trace using NLOG:</p>\n<pre><code>2020-06-24 14:56:05.3948||TRACE|IdentityServer4.Stores.ValidatingClientStore|Calling into client configuration validator: IdentityServer4.Validation.DefaultClientConfigurationValidator \n2020-06-24 14:56:05.4080||DEBUG|IdentityServer4.Stores.ValidatingClientStore|client configuration validation for client Integra.PCSP.Print.WebUI.Client succeeded. \n2020-06-24 14:56:05.4080||ERROR|IdentityServer4.Validation.AuthorizeRequestValidator|Invalid redirect_uri: &quot;https://localhost/TestBlazorAuth/authentication/login-callback&quot;\n</code></pre>\n<p>I looked at IdentityServer4 source code to check how is the comparison done, and it all seems perfectly fine:</p>\n<pre><code>    public class StrictRedirectUriValidator : IRedirectUriValidator\n    {\n        /// &lt;summary&gt;\n        /// Checks if a given URI string is in a collection of strings (using ordinal ignore case comparison)\n        /// &lt;/summary&gt;\n        /// &lt;param name=&quot;uris&quot;&gt;The uris.&lt;/param&gt;\n        /// &lt;param name=&quot;requestedUri&quot;&gt;The requested URI.&lt;/param&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        protected bool StringCollectionContainsString(IEnumerable&lt;string&gt; uris, string requestedUri)\n        {\n            if (uris.IsNullOrEmpty()) return false;\n\n            return uris.Contains(requestedUri, StringComparer.OrdinalIgnoreCase);\n        }\n\n    ...\n    }\n</code></pre>\n<p>At this point I am ready to scratch the project and implement the app in MVC, it's only couple pages, so I thought it would be a great Blazor proof-of-concept. It turned out the development part is easy, the deployment is a nightmare.</p>\n<p>Thanks for any ideas.</p>\n"
}