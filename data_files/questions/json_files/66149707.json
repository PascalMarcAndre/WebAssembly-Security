{
    "tags": [
        "nginx",
        "blazor",
        "content-security-policy",
        "blazor-webassembly"
    ],
    "owner": {
        "reputation": 315,
        "user_id": 6081178,
        "user_type": "registered",
        "accept_rate": 60,
        "profile_image": "https://lh6.googleusercontent.com/-dHQYpZeJV3w/AAAAAAAAAAI/AAAAAAAABlM/4Ym3ORwgYRI/photo.jpg?sz=128",
        "display_name": "Kasbolat Kumakhov",
        "link": "https://stackoverflow.com/users/6081178/kasbolat-kumakhov"
    },
    "is_answered": false,
    "view_count": 156,
    "answer_count": 0,
    "score": 0,
    "last_activity_date": 1613106846,
    "creation_date": 1613024522,
    "last_edit_date": 1613106846,
    "question_id": 66149707,
    "content_license": "CC BY-SA 4.0",
    "link": "https://stackoverflow.com/questions/66149707/content-security-policy-blocks-eval-in-blazor-wasm-project-under-nginx",
    "title": "Content Security Policy blocks &#39;eval&#39; in Blazor Wasm project under nginx",
    "body": "<p>When hosting a Blazor WebAssembly project under NGINX I get the following warning in Chrome Dev console under &quot;Issues&quot; tab:</p>\n<blockquote>\n<p>Content Security Policy of your site blocks the use of 'eval' in\nJavaScript` The Content Security Policy (CSP) prevents the evaluation\nof arbitrary strings as JavaScript to make it more difficult for an\nattacker to inject unathorized code on your site. To solve this issue,\navoid using eval(), new Function(), setTimeout([string], ...) and\nsetInterval([string], ...) for evaluating strings. If you absolutely\nmust: you can enable string evaluation by adding unsafe-eval as an\nallowed source in a script-src directive.</p>\n</blockquote>\n<p>It says that the script is blocked somewhere (&quot;somewhere&quot;, since the block happens in a minified\nblazor.webassembly.js on a first symbol).</p>\n<p>The strangest thing is that my NGINX config contains the required directives:</p>\n<pre><code>worker_processes  1;\n\nevents {\n    worker_connections  1024;\n}\n\nhttp {\n    server_names_hash_bucket_size  64;\n    include         mime.types;\n    default_type    application/octet-stream;\n\n    access_log  off;\n\n    sendfile    on;\n    gzip        on;\n    gzip_static on;\n\n    keepalive_timeout   65;\n\n    ssl_certificate             cert;\n    ssl_certificate_key         key;\n    ssl_protocols               TLSv1.2 TLSv1.3;\n    ssl_prefer_server_ciphers   on;\n    ssl_session_cache           shared:SSL:10m;\n    ssl_session_timeout         10m;\n    ssl_session_tickets         off;\n\n    add_header  X-Frame-Options             &quot;SAMEORIGIN&quot; always;\n    add_header  X-XSS-Protection            &quot;1; mode=block&quot; always;\n    add_header  X-Content-Type-Options      &quot;nosniff&quot; always;\n    add_header  Referrer-Policy             &quot;no-referrer-when-downgrade&quot; always;\n    add_header  Content-Security-Policy     &quot;upgrade-insecure-requests&quot; always;\n    add_header  Content-Security-Policy     &quot;base-uri 'self'&quot; always;\n    add_header  Content-Security-Policy     &quot;script-src 'self' 'unsafe-inline' 'unsafe-eval'&quot; always;\n    add_header  Content-Security-Policy     &quot;default-src 'self' https: 'unsafe-inline' 'unsafe-eval'&quot; always;\n    add_header  Strict-Transport-Security   &quot;max-age=31536000; includeSubDomains; preload&quot; always;\n\n    server {\n        listen      80;\n        listen      [::]:80;\n        server_name host_name;\n        return      301 https://$host$request_uri;\n    }\n\n    server {\n        listen      443 ssl http2;\n        listen      [::]:443 ssl http2;\n        server_name host_name;\n\n        location / {\n            root        wwwroot;\n            try_files   $uri $uri/ /index.html =404;\n        }\n    }\n}\n</code></pre>\n<p>And Chrome Dev tools confirms it:</p>\n<p><a href=\"https://i.stack.imgur.com/sL6sT.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/sL6sT.png\" alt=\"enter image description here\" /></a></p>\n<p>However the warning is still there.</p>\n<p>I've added a separate 'script-src' directive just in case to illustrate the problem. Also tried with just one 'default-src' and results are the same. Tried to use meta header tags to include CSP directives, no luck.</p>\n<p>Perhaps there is something that I've missed in NGINX config or during publishing? The project itself is just a fresh template with all the default settings during publish, built using .Net 5.0</p>\n<p>UPDATE_01:\nHere is the index.html from Blazor template which is currently in use:</p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n\n&lt;head&gt;\n    &lt;meta charset=&quot;utf-8&quot; /&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no&quot; /&gt;\n    &lt;title&gt;SMSConverter.ui&lt;/title&gt;\n    &lt;link rel=&quot;apple-touch-icon&quot; sizes=&quot;180x180&quot; href=&quot;apple-touch-icon.png&quot;&gt;\n    &lt;link rel=&quot;icon&quot; type=&quot;image/png&quot; sizes=&quot;32x32&quot; href=&quot;favicon-32x32.png&quot;&gt;\n    &lt;link rel=&quot;icon&quot; type=&quot;image/png&quot; sizes=&quot;16x16&quot; href=&quot;favicon-16x16.png&quot;&gt;\n    &lt;link rel=&quot;mask-icon&quot; href=&quot;safari-pinned-tab.svg&quot; color=&quot;#324a5e&quot;&gt;\n    &lt;meta name=&quot;msapplication-TileColor&quot; content=&quot;#324a5e&quot;&gt;\n    &lt;meta name=&quot;theme-color&quot; content=&quot;#324a5e&quot;&gt;\n    &lt;link href=&quot;manifest.json&quot; rel=&quot;manifest&quot; /&gt;\n    &lt;link href=&quot;lib/bootstrap/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; /&gt;\n    &lt;link href=&quot;lib/fontawesome/css/fontawesome.min.css&quot; rel=&quot;stylesheet&quot; /&gt;\n    &lt;link href=&quot;lib/fontawesome/css/solid.min.css&quot; rel=&quot;stylesheet&quot; /&gt;\n    &lt;link href=&quot;app.css&quot; rel=&quot;stylesheet&quot; /&gt;\n    &lt;link href=&quot;SMSConverter.ui.styles.css&quot; rel=&quot;stylesheet&quot; /&gt;\n    &lt;base href=&quot;/&quot; /&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;div id=&quot;app&quot;&gt;Loading...&lt;/div&gt;\n\n    &lt;div id=&quot;blazor-error-ui&quot;&gt;\n        An unhandled error has occurred.\n        &lt;a href=&quot;&quot; class=&quot;reload&quot;&gt;Reload&lt;/a&gt;\n        &lt;a class=&quot;dismiss&quot;&gt;\ud83d\uddd9&lt;/a&gt;\n    &lt;/div&gt;\n    &lt;script src=&quot;_framework/blazor.webassembly.js&quot;&gt;&lt;/script&gt;\n    &lt;script&gt;navigator.serviceWorker.register('service-worker.js');&lt;/script&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n"
}