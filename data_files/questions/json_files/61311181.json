{
    "tags": [
        "asp.net-core",
        "httpclient",
        ".net-standard",
        "blazor-client-side",
        "json-patch"
    ],
    "owner": {
        "reputation": 910,
        "user_id": 1706963,
        "user_type": "registered",
        "profile_image": "https://i.stack.imgur.com/WXUTi.jpg?s=128&g=1",
        "display_name": "inliner49er",
        "link": "https://stackoverflow.com/users/1706963/inliner49er"
    },
    "is_answered": true,
    "view_count": 3287,
    "accepted_answer_id": 61329552,
    "answer_count": 3,
    "score": 8,
    "last_activity_date": 1608917570,
    "creation_date": 1587328031,
    "last_edit_date": 1587389574,
    "question_id": 61311181,
    "content_license": "CC BY-SA 4.0",
    "link": "https://stackoverflow.com/questions/61311181/getting-typeerror-failed-to-fetch-error-when-trying-to-call-aspnetcore-restfu",
    "title": "Getting &#39;TypeError: Failed to fetch&#39; error when trying to call AspNetCore Restful API from Blazor Wasm",
    "body": "<p>I'm getting a 'TypeError: Failed to fetch' error when trying to call my AspNetCore Restful API from Blazor Wasm. I can call it from Postman, and it works fine.</p>\n\n<p><strong>My Environment:</strong>\nMicrosoft Visual Studio Community 2019 Preview Version 16.6.0 Preview 3.0</p>\n\n<p><strong>Client: Blazor Wasm Service (dotnetstandard 2.1)</strong></p>\n\n<ul>\n<li>AspNet.WebApi.Client 5.2.7 </li>\n<li>AspNetCore..WebAssembly 3.2 preview 4.2</li>\n<li>System.Net.Http.Json 3.2 preview 5.2</li>\n</ul>\n\n<p><strong>Important Usings:</strong></p>\n\n<pre><code>using Microsoft.AspNetCore.JsonPatch;\nusing Newtonsoft.Json;\nusing System.Net.Http;\nusing System.Net.Http.Headers;\nusing System.Net.Http.Json;\n</code></pre>\n\n<p>Parent namespace and class omitted\n_httpClient is injected into parent class</p>\n\n<pre><code>public async Task&lt;MyDto&gt; UpdatePartialAsync(Guid primaryId, ObjectForUpdateDto objectForUpdateDto)\n{\n\n    MyDto dtoFromApi = null;\n\n    var patchDoc = new JsonPatchDocument&lt;ObjectForUpdateDto&gt;()\n        .Replace(o =&gt; o.Name, objectForUpdateDto.Name)\n        .Replace(o =&gt; o.Description, objectForUpdateDto.Description)\n\n    var uri = $\"MyUri/myResources/{primaryId}\";\n\n    try\n    {\n        _httpClient.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue(\"application/json\"));\n\n        var serializedPatchDoc = JsonConvert.SerializeObject(patchDoc);\n        var json = new StringContent(serializedPatchDoc, Encoding.UTF8, \"application/json-patch+json\");\n\n        var response = await _httpClient.PatchAsync(uri, json);\n        return await response.Content.ReadAsAsync&lt;MyDto&gt;();\n    }\n    catch (Exception)\n    {   \n        throw; //throws 'TypeError: Failed to fetch'\n    }\n\n    return dtoFromApi;\n}\n</code></pre>\n\n<p><strong>My API (.Net 5.0, also tried .Net Core 3.1):</strong></p>\n\n<pre><code>[HttpPatch]\n[Route(\"{primaryId}\")]\npublic ActionResult UpsertPartial([FromRoute]Guid primaryId, [FromBody] JsonPatchDocument&lt;ObjectForUpdateDto&gt; objectForUpdateDto)\n{\n    //client call never makes it here\n    return NoContent();\n}\n</code></pre>\n"
}