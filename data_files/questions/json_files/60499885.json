{
    "tags": [
        "javascript",
        "typescript",
        "class",
        "dynamic-import"
    ],
    "owner": {
        "reputation": 2754,
        "user_id": 1621232,
        "user_type": "registered",
        "accept_rate": 74,
        "profile_image": "https://www.gravatar.com/avatar/4ca2ea1416fa3dc15d1037e6502ac4da?s=128&d=identicon&r=PG",
        "display_name": "Nicolas Marshall",
        "link": "https://stackoverflow.com/users/1621232/nicolas-marshall"
    },
    "is_answered": true,
    "view_count": 103,
    "accepted_answer_id": 60499942,
    "answer_count": 2,
    "score": 0,
    "last_activity_date": 1583262616,
    "creation_date": 1583208012,
    "question_id": 60499885,
    "content_license": "CC BY-SA 4.0",
    "link": "https://stackoverflow.com/questions/60499885/using-async-js-imports-in-exported-classes",
    "title": "Using async js imports in exported classes",
    "body": "<p>Given a package that exposes async/dynamic exports. Which I currently import this way (but I could import it differently):</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>(async function() {\n  const libEd = await import(\"../../.cache/ed25519wars/index.js\");\n})();\n</code></pre>\n\n<p>I intend to re-expose some functions from <code>libEd</code> as part of a class:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>export class Something {\n  static from_X() {\n    return libEd.genFromX();\n  }\n\n  do_Y() {\n    return libEd.doY();\n  }\n}\n</code></pre>\n\n<p><strong>How can I do this ?</strong></p>\n\n<hr>\n\n<p>For more info:</p>\n\n<ul>\n<li>The package that exposes async/dynamic exports is generated by webpack packing webassembly. I'm not sure if I can change anything about this part</li>\n<li>I could definitely change the way I import that package</li>\n<li>I could also change the way I re-expose / group the functions (and use something else than a class)</li>\n</ul>\n"
}