{
    "tags": [
        "c#",
        ".net",
        "asp.net-mvc-5",
        "blazor",
        "asp.net-core-3.0"
    ],
    "owner": {
        "user_type": "does_not_exist",
        "display_name": "user8214728"
    },
    "is_answered": false,
    "view_count": 923,
    "closed_date": 1576494749,
    "answer_count": 0,
    "score": 2,
    "last_activity_date": 1576497774,
    "creation_date": 1576487579,
    "last_edit_date": 1576497774,
    "question_id": 59353490,
    "link": "https://stackoverflow.com/questions/59353490/difference-between-asp-net-mvc-5-and-asp-net-core-3-0-blazor",
    "closed_reason": "Not suitable for this site",
    "title": "Difference between ASP.NET MVC 5 and ASP.NET CORE 3.0 (Blazor)",
    "body": "<p>I am a beginner in learning in .NET Technologies. As I am aware of C# language and i had learned  Asp.Net MVC 5. I am able to understand the concepts which i had been able to implement. I have been used Code-first Approach by Entity Framework.</p>\n\n<p>I have seen some of the ASP.NET CORE projects on youtube and other resources the dependencies from NuGet package manager were not able to install as the project was in ASP.NET CORE 2.0. So I want to learn ASP.NET CORE 3.0. </p>\n\n<p>I have below questions in my mind  : </p>\n\n<ol>\n<li>What is the actual difference between ASP.NET MVC 5 and ASP.NET CORE 3.0?</li>\n<li>Can we learn ASP.NET CORE 3.0 with ASP.NET MVC 5 knowledge?</li>\n<li>Are any prerequisites are required to learn initially while starting ASP.NET CORE 3.0?</li>\n<li>Does ASP.NET CORE 3.0 have the Scaffolding templates as in ASP.NET MVC 5?</li>\n</ol>\n\n<p>So I have seen recently about Blazor .NET web Framework. So i was so excited to learn this framework.</p>\n\n<p><strong>Blazor Server is supported in ASP.NET Core 3.0. Blazor WebAssembly is in preview for ASP.NET Core 3.1.</strong></p>\n\n<p>I was able to understand about the Blazor framework with the help of <a href=\"https://docs.microsoft.com/en-us/aspnet/core/blazor/get-started?view=aspnetcore-3.1&amp;tabs=visual-studio\" rel=\"nofollow noreferrer\">Getting started with ASP.NET Core Blazor</a></p>\n\n<p>I was using visual studio 2019 created a project with Blazor App Template.</p>\n\n<p>WeatherForeCast.cs</p>\n\n<pre><code>using System;\n\nnamespace Understanding.Data\n{\n    public class WeatherForecast\n    {\n        public DateTime Date { get; set; }\n\n        public int TemperatureC { get; set; }\n\n        public int TemperatureF =&gt; 32 + (int)(TemperatureC / 0.5556);\n\n        public string Summary { get; set; }\n    }\n}\n</code></pre>\n\n<p>WeatherForeCastServices.cs</p>\n\n<pre><code>using System;\nusing System.Linq;\nusing System.Threading.Tasks;\n\nnamespace Understanding.Data\n{\n    public class WeatherForecastService\n    {\n        private static readonly string[] Summaries = new[]\n        {\n            \"Freezing\", \"Bracing\", \"Chilly\", \"Cool\", \"Mild\", \"Warm\", \"Balmy\", \"Hot\", \"Sweltering\", \"Scorching\"\n        };\n\n        public Task&lt;WeatherForecast[]&gt; GetForecastAsync(DateTime startDate)\n        {\n            var rng = new Random();\n            return Task.FromResult(Enumerable.Range(1, 5).Select(index =&gt; new WeatherForecast\n            {\n                Date = startDate.AddDays(index),\n                TemperatureC = rng.Next(-20, 55),\n                Summary = Summaries[rng.Next(Summaries.Length)]\n            }).ToArray());\n        }\n    }\n}\n</code></pre>\n\n<p>_Host.cshtml</p>\n\n<pre><code>@page \"/\"\n@namespace Understanding.Pages\n@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n    &lt;title&gt;Understanding&lt;/title&gt;\n    &lt;base href=\"~/\" /&gt;\n    &lt;link rel=\"stylesheet\" href=\"css/bootstrap/bootstrap.min.css\" /&gt;\n    &lt;link href=\"css/site.css\" rel=\"stylesheet\" /&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;app&gt;\n        @(await Html.RenderComponentAsync&lt;App&gt;(RenderMode.ServerPrerendered))\n    &lt;/app&gt;\n\n    &lt;script src=\"_framework/blazor.server.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>MainLayout.razor</p>\n\n<pre><code>@inherits LayoutComponentBase\n\n&lt;div class=\"sidebar\"&gt;\n    &lt;NavMenu /&gt;\n&lt;/div&gt;\n\n&lt;div class=\"main\"&gt;\n    &lt;div class=\"top-row px-4\"&gt;\n        &lt;a href=\"https://docs.microsoft.com/en-us/aspnet/\" target=\"_blank\"&gt;About&lt;/a&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"content px-4\"&gt;\n        @Body\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>I have seen in blogs, Goodbye Javascript! Build an Authentical Web App in C# with Blazor + ASP.NET CORE 3.0. What does it mean? So I want to know what is actually about?</p>\n\n<p>When i had observed the folder structure from ASP.NET MVC 5 to ASP.NET CORE 3.0 Blazor.I had observed the folders differs a lot.</p>\n\n<p><a href=\"https://i.stack.imgur.com/hsKfr.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/hsKfr.png\" alt=\"Blazor Folder hierarchy\"></a></p>\n\n<p>So I want to know how does it work when compare to ASP.NET MVC 5?</p>\n\n<p>Just a little overwhelmed here, any advice would be much appreciated.</p>\n\n<p>Thank you.</p>\n"
}