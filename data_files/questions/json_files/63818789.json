{
    "tags": [
        "asp.net-core",
        "identityserver4",
        "blazor-webassembly"
    ],
    "owner": {
        "reputation": 511,
        "user_id": 583523,
        "user_type": "registered",
        "accept_rate": 40,
        "profile_image": "https://www.gravatar.com/avatar/d3feb3f2c8373a0945b8f56b5cabcb54?s=128&d=identicon&r=PG&f=1",
        "display_name": "Andrea",
        "link": "https://stackoverflow.com/users/583523/andrea"
    },
    "is_answered": true,
    "view_count": 63,
    "accepted_answer_id": 63827348,
    "answer_count": 1,
    "score": 0,
    "last_activity_date": 1599732744,
    "creation_date": 1599681781,
    "question_id": 63818789,
    "content_license": "CC BY-SA 4.0",
    "link": "https://stackoverflow.com/questions/63818789/deployed-webassembly-blazor-application-doesnt-route-authentication-properly-b",
    "title": "Deployed WebAssembly Blazor application doesn&#39;t route authentication properly, but locally working",
    "body": "<p>I created a 'normal' WebAssembly Blazor client and server application.</p>\n<p>I decided later on to add authentication, so I followed the steps at this address:</p>\n<p><a href=\"https://docs.microsoft.com/en-us/aspnet/core/blazor/security/webassembly/hosted-with-identity-server?view=aspnetcore-3.1&amp;tabs=visual-studio\" rel=\"nofollow noreferrer\">https://docs.microsoft.com/en-us/aspnet/core/blazor/security/webassembly/hosted-with-identity-server?view=aspnetcore-3.1&amp;tabs=visual-studio</a></p>\n<p>ending up with this startup code in the server part of the Blazor WebAssembly application:</p>\n<pre><code>public class Startup\n{\n    private readonly IWebHostEnvironment _environment;\n    private readonly IConfiguration _configuration;\n\n    public Startup(IWebHostEnvironment environment, IConfiguration configuration)\n    {\n        _environment = environment;\n        _configuration = configuration;\n    }\n\n    public void ConfigureServices(IServiceCollection services)\n    {\n        if (_environment.IsDevelopment())\n        {\n            services.AddDbContext&lt;ApplicationDbContext&gt;(options =&gt;\n                options.UseSqlServer(\n                    _configuration.GetConnectionString(&quot;LocalEnvironment&quot;)));\n        }\n        else\n        {\n            services.AddDbContext&lt;ApplicationDbContext&gt;(options =&gt;\n                options.UseSqlServer(\n                    _configuration.GetConnectionString(&quot;CloudEnvironment&quot;)));\n        }\n\n        services.AddDefaultIdentity&lt;ApplicationUser&gt;()\n            .AddRoles&lt;ApplicationRole&gt;()\n            .AddEntityFrameworkStores&lt;ApplicationDbContext&gt;();\n\n        services.AddIdentityServer()\n            .AddApiAuthorization&lt;ApplicationUser, ApplicationDbContext&gt;(options =&gt;\n            {\n                options.IdentityResources[&quot;openid&quot;].UserClaims.Add(&quot;name&quot;);\n                options.ApiResources.Single().UserClaims.Add(&quot;name&quot;);\n                options.IdentityResources[&quot;openid&quot;].UserClaims.Add(&quot;role&quot;);\n                options.ApiResources.Single().UserClaims.Add(&quot;role&quot;);\n            });\n\n        JwtSecurityTokenHandler.DefaultInboundClaimTypeMap.Remove(&quot;role&quot;);\n\n        services.AddAuthentication()\n            .AddIdentityServerJwt();\n\n        services.AddControllersWithViews();\n        services.AddRazorPages();\n\n        services.Configure&lt;IdentityOptions&gt;(options =&gt;\n        {\n            options.ClaimsIdentity.UserIdClaimType = ClaimTypes.NameIdentifier;\n\n            options.User.RequireUniqueEmail = true;\n\n            options.Password.RequiredLength = 8;\n            options.Password.RequireNonAlphanumeric = true;\n            options.Password.RequireLowercase = false;\n            options.Password.RequireUppercase = true;\n            options.Password.RequireDigit = true;\n        });\n\n        services.AddTransient&lt;IPasswordValidator&lt;ApplicationUser&gt;, CustomPasswordPolicy&gt;();\n        services.AddTransient&lt;IUserValidator&lt;ApplicationUser&gt;, CustomUsernameEmailPolicy&gt;();\n\n        services.AddTransient&lt;IProfileService, ProfileService&gt;();\n\n        services.AddHttpContextAccessor();\n\n        services.AddHsts(options =&gt;\n        {\n            options.Preload = true;\n            options.IncludeSubDomains = true;\n            options.MaxAge = TimeSpan.FromDays(60);\n        });\n    }\n\n    public void Configure(IApplicationBuilder app, ApplicationDbContext db,\n        UserManager&lt;ApplicationUser&gt; userManager, RoleManager&lt;ApplicationRole&gt; roleManager)\n    {\n        if (_environment.IsDevelopment())\n        {\n            app.UseDeveloperExceptionPage();\n            app.UseDatabaseErrorPage();\n            app.UseWebAssemblyDebugging();\n        }\n        else\n        {\n            app.UseExceptionHandler(&quot;/Error&quot;);\n            app.UseHsts();\n        }\n\n        db.Database.EnsureCreated();\n\n        app.UseHttpsRedirection();\n        app.UseBlazorFrameworkFiles();\n        app.UseStaticFiles();\n\n        app.UseRouting();\n\n        app.UseIdentityServer();\n        app.UseAuthentication();\n        app.UseAuthorization();\n\n        app.UseEndpoints(endpoints =&gt;\n        {\n            endpoints.MapRazorPages();\n            endpoints.MapControllers();\n            endpoints.MapFallbackToFile(&quot;index.html&quot;);\n        });\n\n        IdentityDataInitializer.SeedTestData(userManager, roleManager);\n    }\n}\n</code></pre>\n<p>The resulting application works perfectly when in the Development environment (both in Kestrel and IIS Express, but when I deploy it to an Azure Service App, the authentication part, and only that one, doesn't work properly.</p>\n<p>For example: if I click the Login button in the home page, when I'm local there's a jump to the page:</p>\n<p>https://localhost:5001/Identity/Account/Login?ReturnUrl=...</p>\n<p>That's the correct path, because, moreover, after logging in, I'm redirected correctly to the home page.</p>\n<p>But when I click the same button on the deployed application, I see the address becoming first</p>\n<p>'.../authentication/login'</p>\n<p>and after a few moments, going to</p>\n<p>'.../connect/authorize?client_id=Test1.Client&amp;redirect_uri=...'</p>\n<p>that's a not existing page.</p>\n<p>Personally, I don't even understand, at the moment, if it's a server or client problem, or just the configuration of the service app on Azure...</p>\n<p>Please, feel free to ask for other code, or anything that can help.</p>\n<p>Thank you in advance.</p>\n"
}