{
    "tags": [
        "authentication",
        "blazor",
        "identityserver4",
        "webassembly"
    ],
    "owner": {
        "reputation": 197,
        "user_id": 267124,
        "user_type": "registered",
        "accept_rate": 25,
        "profile_image": "https://www.gravatar.com/avatar/64e590aa5e63904f34f290625ebd2372?s=128&d=identicon&r=PG",
        "display_name": "Craig",
        "link": "https://stackoverflow.com/users/267124/craig"
    },
    "is_answered": false,
    "view_count": 36,
    "answer_count": 1,
    "score": 0,
    "last_activity_date": 1615419280,
    "creation_date": 1615392955,
    "question_id": 66568707,
    "content_license": "CC BY-SA 4.0",
    "link": "https://stackoverflow.com/questions/66568707/blazor-wasm-identity-login-logout-event",
    "title": "Blazor Wasm Identity Login/Logout event",
    "body": "<p>In a .Net 5 Blazor WASM app using the standard identity from the Wasm template, I want to do something when a user logs in (or logs out).  I've tried the RemoteAuthenticatorView in Authentication.razor:</p>\n<pre><code>@page &quot;/authentication/{action}&quot;\n@using Microsoft.AspNetCore.Components.WebAssembly.Authentication\n&lt;RemoteAuthenticatorView Action=&quot;@Action&quot; \n                         OnLogInSucceeded=&quot;OnLoginSucceeded&quot;\n                         OnLogOutSucceeded=&quot;OnLogoutSucceeded1&quot;\n                         /&gt;\n\n\n@code{\n    [Parameter] public string Action { get; set; }\n\n\n\n    public async void OnLoginSucceeded()\n    {\n        // do something\n    }\n\n    public void OnLogoutSucceeded1()\n    {\n        // do something\n    }\n\n}\n</code></pre>\n<p>and also, I tried in a component (where I really want to take the action to merge a shopping basket) :</p>\n<pre><code>AuthenticationStateProvider.AuthenticationStateChanged += OnAuthenticationStateChanged;\n\n\n private async void OnAuthenticationStateChanged(Task&lt;AuthenticationState&gt; task)\n    {\n        var user = (await task).User;\n        Console.WriteLine(DateTime.Now.ToString(&quot;hh:mm:ss:fff&quot;) + &quot; InitialDataLoader -&gt; OnAuthenticationStateChanged -&gt; IsUserAuthenticated: &quot; + user.Identity.IsAuthenticated);\n\n    }\n\n</code></pre>\n<p>I have breakpoints in each method and after I finally hit the Login breakpoint in both the RemoteAuthenticatorView  and my component (it didn't break  at all for a while), it now breaks but once only.  If I logout - no logout event.  If I login again, even as another user, I don't hit the breakpoints.</p>\n<p>Is there a consistent method to generate or detect a login?</p>\n"
}