{
    "tags": [
        "c#",
        "authentication",
        "blazor",
        "http-status-code-403",
        "webassembly"
    ],
    "owner": {
        "reputation": 269,
        "user_id": 13705843,
        "user_type": "registered",
        "profile_image": "https://www.gravatar.com/avatar/75dee0c4aea2cb4dde0631495f0290a1?s=128&d=identicon&r=PG&f=1",
        "display_name": "azzurro123",
        "link": "https://stackoverflow.com/users/13705843/azzurro123"
    },
    "is_answered": true,
    "view_count": 260,
    "accepted_answer_id": 63612176,
    "answer_count": 1,
    "score": 0,
    "last_activity_date": 1598523290,
    "creation_date": 1598515592,
    "question_id": 63611732,
    "content_license": "CC BY-SA 4.0",
    "link": "https://stackoverflow.com/questions/63611732/redirect-to-403-forbidden-component-in-blazor-webassembly",
    "title": "Redirect to 403 Forbidden component in Blazor WebAssembly",
    "body": "<p>I'm currently working on a <strong>.NET Standard 2.1 Blazor WebAssembly Hosted</strong> application.</p>\n<p>In my authentication scheme I use <strong>User Roles</strong>.</p>\n<p>I want to redirect all users to a <code>&lt;ForbiddenView /&gt;</code> if a user is not in a role i.e. <strong>Admin</strong>.</p>\n<p>It would be nice to handle this on one place in the application.</p>\n<ul>\n<li>My App.razor looks like this:</li>\n</ul>\n<pre><code>   &lt;CascadingAuthenticationState&gt;\n        &lt;Router AppAssembly=&quot;@typeof(Program).Assembly&quot;&gt;\n            &lt;Found Context=&quot;routeData&quot;&gt;\n                &lt;AuthorizeRouteView RouteData=&quot;@routeData&quot;&gt;\n                    &lt;Authorizing&gt;\n                        &lt;p&gt;Authorizing...&lt;/p&gt;\n                    &lt;/Authorizing&gt;\n                    &lt;NotAuthorized&gt;\n                        @if (!context.User.Identity.IsAuthenticated)\n                        {\n                           // User is not authenticated - forward to login view\n                            &lt;LoginView /&gt;\n                        }\n                        else if(context.User.Identity.IsAuthenticated &amp;&amp; context.User.Identity.NotInRole) // .NotInRole does not exist!!\n                        {\n                            // 403 - User is authenticated, but not in a specific role i.e. admin to view a page in my app. The server understood the request, but is refusing to fulfill it.\n                            &lt;ForbiddenView /&gt;\n                        }\n                        else\n                        {\n                           // 401 - Login of my user happend - the request already includes Authorization credentials.\n                            &lt;NotAuthorizedView /&gt;\n                        }\n                    &lt;/NotAuthorized&gt;\n                &lt;/AuthorizeRouteView&gt;\n            &lt;/Found&gt;\n            &lt;NotFound&gt;\n                &lt;NotFoundView /&gt;\n            &lt;/NotFound&gt;\n        &lt;/Router&gt;\n    &lt;/CascadingAuthenticationState&gt;\n</code></pre>\n<p>Do you know how to handle the 403 error in Blazor WebAssembly in a centralized way?</p>\n<p>Do you have any suggests on how to handle the 403 error on Blazor WebAssembly?</p>\n"
}