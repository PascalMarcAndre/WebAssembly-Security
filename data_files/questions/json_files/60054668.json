{
    "tags": [
        ".net-core",
        "blazor",
        "webassembly",
        "blazor-client-side"
    ],
    "owner": {
        "reputation": 1737,
        "user_id": 5276297,
        "user_type": "registered",
        "accept_rate": 90,
        "profile_image": "https://www.gravatar.com/avatar/2160747b307b49c109b99348de6ccbef?s=128&d=identicon&r=PG",
        "display_name": "Naveen Kumar V",
        "link": "https://stackoverflow.com/users/5276297/naveen-kumar-v"
    },
    "is_answered": true,
    "view_count": 227,
    "accepted_answer_id": 60055041,
    "answer_count": 2,
    "score": 0,
    "last_activity_date": 1580811666,
    "creation_date": 1580809789,
    "last_edit_date": 1580811666,
    "question_id": 60054668,
    "content_license": "CC BY-SA 4.0",
    "link": "https://stackoverflow.com/questions/60054668/native-error-in-net-core-blazor-webassembly",
    "title": "Native error in .NET Core Blazor WebAssembly",
    "body": "<p>My task is to run a CLI command (in the client's system) and to show the output to the user on the Web app. [assume, <strong>a web-based cmd.exe</strong>]</p>\n\n<p>Based on reading about WebAssembly's capabilities, I used the .NET CORE Blazor WebAssembly to do the task. But using the <strong>System.Diagnostics.ProcessStartInfo</strong> in Client throws runtime error <strong>Native error= Cannot find the specified file</strong>.</p>\n\n<p>Please let me know if my understanding of WebAssembly is wrong. Also, suggest how I could accomplish the task?</p>\n\n<p><strong>Code used in Razor page:</strong></p>\n\n<pre><code>protected override async Task OnInitializedAsync()\n{\n    quiz = await Http.GetJsonAsync&lt;List&lt;QuizItem&gt;&gt;(\"Quiz\");\n\n    // My actual code...\n    string process = @\"C:\\Windows\\System32\\cmd.exe\", arguments = \"start\", workingFolder = \".\";\n    System.Diagnostics.ProcessStartInfo startinfo = new System.Diagnostics.ProcessStartInfo {\n        FileName = process, Arguments = arguments, WorkingDirectory = workingFolder,\n        CreateNoWindow = false, UseShellExecute = false,\n        RedirectStandardError = true, RedirectStandardOutput = true,\n    };\n    System.Diagnostics.Process proc = System.Diagnostics.Process.Start (startinfo);\n    if (proc == null) throw new Exception ($\"Unable to execute '{process}'\");\n}\n</code></pre>\n\n<p><strong>Console log for reference:</strong></p>\n\n<p><a href=\"https://i.stack.imgur.com/BVFLG.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/BVFLG.png\" alt=\"enter image description here\"></a></p>\n"
}