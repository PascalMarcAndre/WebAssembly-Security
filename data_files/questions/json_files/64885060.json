{
    "tags": [
        "c#",
        "asp.net-core",
        "identityserver4",
        "blazor"
    ],
    "owner": {
        "reputation": 15,
        "user_id": 14307252,
        "user_type": "registered",
        "profile_image": "https://www.gravatar.com/avatar/e54a11089a3f3c3c95c64e358aaa82eb?s=128&d=identicon&r=PG&f=1",
        "display_name": "Enrique",
        "link": "https://stackoverflow.com/users/14307252/enrique"
    },
    "is_answered": false,
    "view_count": 142,
    "answer_count": 1,
    "score": 0,
    "last_activity_date": 1605697565,
    "creation_date": 1605656989,
    "question_id": 64885060,
    "content_license": "CC BY-SA 4.0",
    "link": "https://stackoverflow.com/questions/64885060/how-to-solve-the-loop-in-identityserver4-connect-authorize-callbackclient-id",
    "title": "how to solve the loop in IdentityServer4 - connect/authorize/callback?client_id=?",
    "body": "<p>hello community I have a project created with asp.net core, blazor webassembly and Identity4, the local project works very well, I published it on an IIS server so that it could be seen from the internet, the project was loaded perfectly, the only detail is that when I enter the login it is loading, until I give it to empty cache and load in a forced way, I can enter the login form, then I enter my credentials and again it stays loading until I empty the cache again and enter the page that indicates I'm already logged in.</p>\n<blockquote>\n<p>How can I enter the login form without emptying the cache and loading\nforcefully?</p>\n</blockquote>\n<p>When I click the login button, it sends me to this route but it's wrong:</p>\n<pre><code>connect/authorize?client_id=BlazorApp.Client&amp;redirect_uri=https%3A%2F%2\n</code></pre>\n<p>this is the route that is fine to take me:</p>\n<pre><code>Identity/Account/Login?ReturnUrl=%2Fconnect%2Fauthorize%2Fcallback%3Fclient_id\n</code></pre>\n<p>this is my class startup:</p>\n<pre><code> public class Startup\n    {\n        public Startup(IConfiguration configuration)\n        {\n            Configuration = configuration;\n            JwtSecurityTokenHandler.DefaultInboundClaimTypeMap.Clear();\n        }\n\n        public IConfiguration Configuration { get; }\n\n        // This method gets called by the runtime. Use this method to add services to the container.\n        // For more information on how to configure your application, visit https://go.microsoft.com/fwlink/?LinkID=398940\n        public void ConfigureServices(IServiceCollection services)\n        {         \n\n            services.AddDbContext&lt;SimulexContext&gt;\n                          (options =&gt; options.UseSqlServer(Configuration.GetConnectionString(&quot;SimulexConnection&quot;)));\n\n           \n            services.AddDefaultIdentity&lt;ApplicationUser&gt;(options =&gt; {\n            options.SignIn.RequireConfirmedAccount = true;\n            options.Password.RequireDigit = false;\n            options.Password.RequireLowercase = false;\n            options.Password.RequireUppercase = false;\n            options.Password.RequireNonAlphanumeric = false;\n            })\n            .AddRoles&lt;IdentityRole&gt;()\n            .AddEntityFrameworkStores&lt;ApplicationDbContext&gt;();\n\n            services.AddIdentityServer()\n                .AddApiAuthorization&lt;ApplicationUser, ApplicationDbContext&gt;()\n                .AddProfileService&lt;IdentityProfileService&gt;();\n\n            services.AddAuthentication()\n               .AddIdentityServerJwt();\n\n            services.Configure&lt;PayPalConfiguration&gt;(Configuration.GetSection(&quot;PayPal&quot;));\n           \n\n            services.AddControllersWithViews();\n            services.AddRazorPages();\n\n           \n            services.AddAutoMapper(typeof(Startup));\n\n            \n            services.AddScoped&lt;NotificacionesService&gt;();\n\n            \n            services.AddScoped&lt;IAlmacenadorDeArchivos, AlmacenadorArchivosLocal&gt;();\n            \n            services.AddHttpContextAccessor();\n\n            \n            services.AddMvc().AddNewtonsoftJson(options =&gt;\n            options.SerializerSettings.ReferenceLoopHandling = Newtonsoft.Json.ReferenceLoopHandling.Ignore);\n        }\n\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\n        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)\n        {\n            if (env.IsDevelopment())\n            {\n                app.UseDeveloperExceptionPage();\n                app.UseWebAssemblyDebugging();\n            }\n            else\n            {\n                app.UseExceptionHandler(&quot;/Error&quot;);\n                // The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.\n                app.UseHsts();\n            }\n\n            app.UseHttpsRedirection();\n            app.UseBlazorFrameworkFiles();\n            app.UseStaticFiles();\n\n            app.UseRouting();            \n            \n            app.UseAuthentication();\n            app.UseIdentityServer();\n            app.UseAuthorization();\n\n            app.UseEndpoints(endpoints =&gt;\n            {\n                endpoints.MapGet(&quot;/api/config/notificacionesllavepublica&quot;, async context =&gt;\n                 {\n                     var configuration = context.RequestServices.GetRequiredService&lt;IConfiguration&gt;();\n                     var llavePublica = configuration.GetValue&lt;string&gt;(&quot;notificaciones:llave_publica&quot;);\n                     await context.Response.WriteAsync(llavePublica);\n                 });\n\n                endpoints.MapRazorPages();\n                endpoints.MapControllers();              \n                endpoints.MapFallbackToFile(&quot;index.html&quot;);\n            });\n        }\n    }\n</code></pre>\n<p>this is my page appsettingsjson:</p>\n<pre><code>&quot;IdentityServer&quot;: {\n    &quot;Key&quot;: {\n      &quot;Type&quot;: &quot;Development&quot;\n    },\n    &quot;Clients&quot;: {\n      &quot;BlazorApp.Client&quot;: {\n        &quot;Profile&quot;: &quot;IdentityServerSPA&quot;\n      }\n    }\n  },\n</code></pre>\n"
}